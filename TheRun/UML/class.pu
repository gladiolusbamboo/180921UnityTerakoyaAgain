@startuml TheRun
class GameEnum{
    + MOVE_DIR : enum
}

namespace UI{
    interface IButtonHandler{
        + Tap() : void
        + Release() : void
    }

    class LeftButtonHandler{
        + playerLeftMover : IPlayerButtonAction
        - Start() : void
        + Tap() : void
        + Release() : void
    }
    LeftButtonHandler ..|> IButtonHandler
    LeftButtonHandler --> Player.IPlayerButtonAction
    
    class RightButtonHandler{
        + playerRightMover : IPlayerButtonAction
        - Start() : void
        + Tap() : void
        + Release() : void
    }
    RightButtonHandler ..|> IButtonHandler
    RightButtonHandler --> Player.IPlayerButtonAction
    
    class JumpButtonHandler{
        + playerJumper : IPlayerButtonAction
        - Start() : void
        + Tap() : void
        + Release() : void
    }
    JumpButtonHandler ..|> IButtonHandler
    JumpButtonHandler --> Player.IPlayerButtonAction

    class ButtonUsingManager{
        - isUsing : bool
        - Start() : void
        ~ SetIsUsing(bool) : void
        ~ GetIsUsing() : bool
    }
}

namespace Player{
    interface IPlayerButtonAction{
        + TapAction() : void
        + ReleaseAction() : void
    }

    class PlayerLeftMover{
        + leftButtonUsingManager : ButtonUsingManager
        + PlayerMover
        + TapAction() : void
        + ReleaseAction() : void
    }
    PlayerLeftMover ..|> IPlayerButtonAction
    PlayerLeftMover --> UI.ButtonUsingManager
    PlayerLeftMover --> PlayerMover

    class PlayerRightMover{
        + rightButtonUsingManager : ButtonUsingManager
        + PlayerMover
        + TapAction() : void
        + ReleaseAction() : void
    }
    PlayerRightMover ..|> IPlayerButtonAction
    PlayerRightMover --> UI.ButtonUsingManager
    PlayerRightMover --> PlayerMover

    class PlayerMover{
        + Rigidbody2D
        - moveDirection = GameEnum.MOVE_DIR.STOP : GameEnum.MOVE_DIR
        - moveSpeed : float
        - MOVE_SPEED = 3f : const float 
        - FixedUpdate() : void
        ~ SetMoveDirection(GameEnum.MOVE_DIR dir) : void
        ~ Stop() : void
    }
    PlayerMover --> .GameEnum

    class PlayerJumper{
        + Rigidbody2D
        + jumpPower : float
        - goJump : bool
        + blockLayer : LayerMask
        - FixedUpdate() : void
        ~ Jump() : void
        - canJump() : bool
        + TapAction() : void
        + ReleaseAction() : void
    }
    PlayerJumper ..|>  IPlayerButtonAction
}

namespace KeyboardInput{
    class KeyboardHandler{
        + PlayerMover
        + PlayerJumper
        + rightButtonUsingManager : ButtonUsingManager
        + leftButtonUsingManager : ButtonUsingManager
        + jumpButtonUsingManager : ButtonUsingManager
        - Update() : void
    }
    KeyboardHandler --> Player.PlayerMover
    KeyboardHandler --> Player.PlayerJumper
    KeyboardHandler --> UI.ButtonUsingManager
}

@enduml