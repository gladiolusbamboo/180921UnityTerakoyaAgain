@startuml TheRun
class GameEnum{
    + MOVE_DIR : enum
}

namespace UI{
    interface IButtonHandler{
        + Tap() : void
        + Release() : void
    }

    class LeftButtonHandler{
        + PlayerMover
        + Tap() : void
        + Release() : void
    }
    LeftButtonHandler --> Player.PlayerMover
    LeftButtonHandler --|> IButtonHandler

    class RightButtonHandler{
        + PlayerMover
        + Tap() : void
        + Release() : void
    }
    RightButtonHandler --> Player.PlayerMover
    RightButtonHandler --|> IButtonHandler

    class JumpButtonHandler{
        + PlayerJumper
        + Tap() : void
        + Release() : void
    }
    JumpButtonHandler --> Player.PlayerJumper
    JumpButtonHandler --|> IButtonHandler
}

namespace Player{
    class PlayerMover{
        + Rigidbody2D
        - moveDirection = GameEnum.MOVE_DIR.STOP : GameEnum.MOVE_DIR
        - moveSpeed : float
        - MOVE_SPEED = 3f : const float 
        ~ SetMoveDirection(GameEnum.MOVE_DIR dir) : void
        - FixedUpdate() : void
        - Move() : void
    }
    PlayerMover --> .GameEnum

    class PlayerJumper{
        + Rigidbody2D
        + jumpPower : float
        - goJump : bool
        + blockLayer : LayerMask
        - isUsingButton : bool
        - FixedUpdate() : void
        ~ Jump(bool isButton) : void
        ~ Stop(bool isButton) : void
        - canJump() : bool
    }
}

namespace KeyboardInput{
    class KeyboardHandler{
        + PlayerMover
        + PlayerJumper
        - Update() : void
    }
    KeyboardHandler --> Player.PlayerMover
    KeyboardHandler --> Player.PlayerJumper
}

@enduml